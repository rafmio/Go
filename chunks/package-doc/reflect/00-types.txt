Интерфейсы представляют собой фиксированные наборы методов.
Интерфейс может хранить любое конкретное (не интерфейсное) значение
Любой тип который реализует методы Read/Write с этой сигнатурой называются
реализующими интерфейс Read/Write

Переменна типа io.Reader может хранить любое значение, чей тип реализует Read method

var r io.Read
r = os.Stdin
r = bufio.NewReader(r)
r new(bytes.Buffer)

Тип переменной r всегда io.Reader. Go статически типизирован и статический тип
переменной r - io.Reader

any == interface{}

interface{} представляет пустой набор методов и удовлетворяется любым значением

Переменная интерфейса хранит пару:
	- конкретное значение, присвоенное переменной
	- описание этого значения

var r io.Reader
tty, err := os.OpenFile("/dev/tty", os.O_RDWR, 0)
if err != nil {
	return nil, err
}
r = tty

r хранит (тип значение) - пара (tty, *os.File)
*os.File реализует методы, отличные от Read
Несмотря на то, что значение интерфейса предоставляет доступ только к методу Read, 
значение внутри хранит всю инфу о типе этого значения
