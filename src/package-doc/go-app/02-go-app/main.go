// generated by Preplexity
package main

import (
	"log"
	"net/http"

	"github.com/maxence-charriere/go-app/v10/pkg/app"
)

type hello struct {
	app.Compo
	name string
}

func (h *hello) Render() app.UI {
	return app.Div().Body(
		app.H1().Body(
			app.Text("Hello, "),
			app.If(h.name != "", func() app.UI {
				return app.Text(h.name)
			}).Else(func() app.UI {
				return app.Text("World!")
			}),
		),
		app.P().Body(
			app.Input().
				Type("text").
				Value(h.name).
				Placeholder("What is your name?").
				AutoFocus(true).
				OnChange(h.ValueTo(&h.name)),
		),
	)
}

func main() {
	// Components routing
	app.Route("/", func() app.Composer {
		return &hello{}
	})

	// HTTP routing
	http.Handle("/", &app.Handler{
		Name:        "Hello",
		Description: "A Hello World example",
	})

	// Start the server
	if err := http.ListenAndServe(":8000", nil); err != nil {
		log.Fatal(err)
	}
}

// GOARCH=wasm GOOS=js go build -o web/app.wasm
// go build

// USE A MAKEFILE
// The build process can be simplified by writing a makefile:

// build:
// 	GOARCH=wasm GOOS=js go build -o web/app.wasm
// 	go build

// run: build
// 	./hello
// It can now be built and run with this single command:

// make run
